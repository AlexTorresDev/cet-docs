---
import { getLanguageFromURL } from "../../languages";
import { SIDEBAR, SITE } from "../../consts";
import Search from "@components/Header/Search";

type Props = {
	currentPage: string;
};

const { currentPage } = Astro.props;
const currentPageMatch = currentPage.endsWith("/")
	? currentPage.slice(1, -1)
	: currentPage.slice(1);
const langCode = getLanguageFromURL(currentPage);
const sidebar = SIDEBAR[langCode];
---

<div class="bg-base-200 w-80">
	<div
		class="z-20 bg-base-200 bg-opacity-90 backdrop-blur sticky top-0 items-center gap-2 px-4 py-2 hidden lg:flex"
	>
		<a
			class="inline-flex gap-2 items-end normal-case text-xl md:px-4 px-2 transition-all hover:scale-110"
			href={`/${langCode}/`}
		>
			<span class="text-sm md:text-xl">{SITE.title}</span>
		</a>
	</div>

	<div class="mx-auto mt-4 mb-2">
		<Search isMobile={true} client:idle />
	</div>

	{
		Object.entries(sidebar).map(([header, children], index) => (
			<ul class="menu menu-compact flex flex-col p-0 px-4">
				{index !== 0 && <li />}
				{index !== 0 && (
					<li>
						<span class="menu-title">{header}</span>
					</li>
				)}
				{children.map(({ icon, text, link, tag }) => {
					const url = Astro.site?.pathname + link;
					const active = currentPageMatch === link;

					return (
						<li>
							<a
								class:list={["flex gap-4 rounded-lg", { active }]}
								href={url}
								aria-current={active ? "page" : false}
							>
								{icon && <span class="flex-none" set:html={icon} />}
								<span class="flex-1">{text}</span>
								{tag && (
									<span class="badge badge-sm flex-none lowercase">{tag}</span>
								)}
							</a>
						</li>
					);
				})}
			</ul>
		))
	}
</div>
