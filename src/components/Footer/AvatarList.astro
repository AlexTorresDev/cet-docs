---
import { getLangFromUrl, useTranslations } from "@i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// fetch all commits for just this page's path
const resolvedPath = "AlexTorresDev/custom-electron-titlebar";
const repoUrl = `https://github.com/${resolvedPath}`;
const apiUrl = `https://api.github.com/repos/${resolvedPath}/commits`;

type Commit = {
  author: {
    id: string;
    login: string;
  };
};

async function getCommits(url: string) {
  try {
    const token = import.meta.env.GITHUB_TOKEN ?? "hello";
    if (!token) {
      throw new Error(
        'Cannot find "GITHUB_TOKEN" used for escaping rate-limiting.'
      );
    }

    const auth = `Basic ${Buffer.from(token, "binary").toString("base64")}`;

    const res = await fetch(url, {
      method: "GET",
      headers: {
        Authorization: auth,
        "User-Agent": "astro-docs/1.0",
      },
    });

    const data = await res.json();

    if (!res.ok) {
      throw new Error(
        `Request to fetch commits failed. Reason: ${res.statusText}
       Message: ${data.message}`
      );
    }

    return data as Commit[];
  } catch (e) {
    console.warn(`[error]  /src/components/AvatarList.astro 
    ${(e as any)?.message ?? e}`);
    return [] as Commit[];
  }
}

function removeDups(arr: Commit[]) {
  const map = new Map<string, Commit["author"]>();

  for (let item of arr) {
    const author = item.author;
    // Deduplicate based on author.id
    map.set(author.id, { login: author.login, id: author.id });
  }

  return [...map.values()];
}

const data = await getCommits(apiUrl);
const unique = removeDups(data);
const recentContributors = unique.slice(0, 5);
const additionalContributors = unique.length - recentContributors.length;
---

<!-- Thanks to @5t3ph for https://smolcss.dev/#smol-avatar-list! -->
<div class="flex flex-col gap-3">
  <ul
    class="avatar-list grid"
    style={`--avatar-count: ${recentContributors.length}`}
  >
    {
      recentContributors.map((item) => (
        <li class="w-11 h-11">
          <a
            class="block rounded-full border-solid border-2 overflow-hidden transition-all duration-150 ease-in-out"
            href={`https://github.com/${item.login}`}
          >
            <img
              alt={`Contributor ${item.login}`}
              title={`Contributor ${item.login}`}
              width="64"
              height="64"
              src={`https://avatars.githubusercontent.com/u/${item.id}`}
            />
          </a>
        </li>
      ))
    }
  </ul>
  {
    additionalContributors > 0 && (
      <span>
        <a href={repoUrl}>
          {t("footer.moreContributors", [additionalContributors])}
        </a>
      </span>
    )
  }
  {unique.length === 0 && <a href={repoUrl}>{t("footer.contributors")}</a>}
</div>

<style>
  .avatar-list {
    --avatar-size: 2.5rem;
    --avatar-count: 3;

    grid-template-columns: repeat(
      var(--avatar-count),
      max(44px, calc(var(--avatar-size) / 1.15))
    );
  }

  @media (any-hover: hover) and (any-pointer: fine) {
    .avatar-list {
      grid-template-columns: repeat(
        calc(var(--avatar-count) + 1),
        calc(var(--avatar-size) / 1.75)
      );
    }
  }

  .avatar-list li:hover ~ li a,
  .avatar-list li:focus-within ~ li a {
    transform: translateX(33%);
  }
</style>
